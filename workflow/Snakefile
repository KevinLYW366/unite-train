# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.io import glob_wildcards, expand


configfile: "config/config.yaml"


include: "common.smk"  # python helper functions


# Prevents the 'download' rule from running on worker nodes
localrules:
    all,
    download,


# load and set conda envs and modules from the config
Q2CONDA = config["q2env"]
Q2MOD = config["q2mod"]
Q2DOCKER = config["q2docker"]

GOALS = expand(
    "results/unite_{ver}_{id}_{type}{date}-Q2-{q2v}.qza",
    ver=config["version"],
    id=config["cluster"],
    type=config["type"],
    date=config["date"],
    q2v=config["q2v"],
)
# print(GOALS)


rule all:
    input:
        #taxa="results/sh_taxa_qiime_{ver}_{id}_{type}{date}_dev.qza",
        #seqs="results/sh_refs_qiime_{ver}_{id}_{type}{date}_dev.qza"
        GOALS,


checkpoint download:  # This is not proper snakemake. I can't get my tuples to work.
    output:
        #ref=temp("downloads/sh_refs_qiime_{ver}_{id}_{type}{date}_dev.fasta"),
        #tax=temp("downloads/sh_taxonomy_qiime_{ver}_{id}_{type}{date}_dev.txt")
        # Note the messy wildcards in rule.reformat_seqs and rule.import_tax this requires
        dir=directory("downloads/"),
    log:
        "logs/downloads.log",
    conda:
        "envs/unix-tools.yaml"
    shell:
        """
        mkdir -p downloads

        # Version 10 update. Get DOIs from here: https://unite.ut.ee/repository.php
        # To get URLs you can download directly, plug them into this API:
        # https://api.plutof.ut.ee/v1/public/dois/?format=api&identifier=10.15156/BIO/2483915

        # 10.0	2024-04-04	Fungi	18 895	74 190	Current	https://doi.org/10.15156/BIO/2959336
        wget -qO- https://s3.hpc.ut.ee/plutof-public/original/db1d6ddb-a35d-48c5-8b1a-ad9dd3310c6d.tgz | \
          tar xz -C downloads --strip-components 1

        # 10.0	2024-04-04	Fungi	18 895	140 300	Current	https://doi.org/10.15156/BIO/2959337
        wget -qO- https://s3.hpc.ut.ee/plutof-public/original/06daa092-e96a-48e7-9303-4402cc5c46c5.tgz | \
          tar xz -C downloads --strip-components 1

        # 10.0	2024-04-04	All eukaryotes	19 302	122 914	Current	https://doi.org/10.15156/BIO/2959338
        wget -qO- https://s3.hpc.ut.ee/plutof-public/original/711a503c-589d-4138-a76f-6a8b89460ecf.tgz | \
          tar xz -C downloads --strip-components 1

        # 10.0	2024-04-04	All eukaryotes	19 302	232 937	Current	https://doi.org/10.15156/BIO/2959339
        wget -qO- https://s3.hpc.ut.ee/plutof-public/original/55665851-81f9-4704-8287-b5971abbf85c.tgz | \
          tar xz -C downloads --strip-components 1

        """


rule import_seqs:
    input:
        "downloads",
    output:
        temp("results/sh_refs_qiime_{ver}_{id}_{type}{date}_dev.qza"),
    log:
        "logs/import_seqs_{ver}_{id}_{type}{date}.log",
    conda:
        Q2CONDA
    envmodules:
        Q2MOD,
    container:
        Q2DOCKER
    shell:
        """
        qiime tools import \
        --type FeatureData[Sequence] \
        --input-format MixedCaseDNAFASTAFormat \
        --input-path {input}/sh_refs_qiime_{wildcards.ver}_{wildcards.id}_{wildcards.type}{wildcards.date}_dev.fasta \
        --output-path {output}
        """


rule import_tax:
    input:
        "downloads",
    output:
        temp("results/sh_taxa_qiime_{ver}_{id}_{type}{date}_dev.qza"),
    log:
        "logs/import_taxa_{ver}_{id}_{type}{date}.log",
    conda:
        Q2CONDA
    envmodules:
        Q2MOD,
    container:
        Q2DOCKER
    shell:
        """
        qiime tools import \
        --type FeatureData[Taxonomy] \
        --input-format HeaderlessTSVTaxonomyFormat \
        --input-path {input}/sh_taxonomy_qiime_{wildcards.ver}_{wildcards.id}_{wildcards.type}{wildcards.date}_dev.txt \
        --output-path {output}
        """


rule train:
    input:
        ref=rules.import_seqs.output,
        tax=rules.import_tax.output,
    output:
        protected("results/unite_{ver}_{id}_{type}{date}-Q2-{q2v}.qza"),
    log:
        "logs/train_{ver}_{id}_{type}{date}-Q2-{q2v}.log",
    conda:
        Q2CONDA
    envmodules:
        Q2MOD,
    container:
        Q2DOCKER
    benchmark:
        "logs/train_{ver}_{id}_{type}{date}-Q2-{q2v}.tsv"
    resources:
        mem_mb=get_mem_mb,  # see common.smk
        runtime="24h",  # hopefully not
    shell:
        """
        qiime feature-classifier fit-classifier-naive-bayes \
        --p-classify--chunk-size 10000 \
        --i-reference-reads    {input.ref} \
        --i-reference-taxonomy {input.tax} \
        --o-classifier {output}
        """
